---
- hosts: all
  become: true
  become_user: root
  vars:
    hostname: "{{ ansible_facts['hostname'] }}"
    address: "{{ ansible_mgm.ipv4.address }}"
    os: "{{ ansible_distribution }} {{ ansible_distribution_version }}"
  tasks:

  - name: TrendMicro
    shell: rpm -qa | grep -i ds_agent|cut -d '-' -f2
    register: trendmicro
    ignore_errors: yes

  - set_fact:
      trendmicro_out: "{% if (trendmicro.stdout == '') %}{%else%}TrendMicro: {{ trendmicro.stdout }}{% endif %}"
      tool1: "trendmicro"

  - name: Docker
    shell: docker --version|cut -d',' -f1|awk '{print $3}'
    register: docker
    ignore_errors: yes

  - set_fact:
      docker_out: "{% if (docker.stdout == '') %}{%else%}Docker: {{ docker.stdout }}{% endif %}"
      tool2: "docker"

  - name: Mysql 5.7
    shell: mysqld -V|cut -d',' -f1|awk '{print $3}'
    register: mysql
    ignore_errors: yes

  - name: Mysql 8.0 check
    shell: "{% if (mysql.stdout == 'for') %} mysql -V|awk '{print $2}' {% else %} mysqld -V|cut -d',' -f1|awk '{print $3}' {% endif %}"
    register: mysql
    ignore_errors: yes

  - set_fact:
      mysql_out: "{% if (mysql.stdout == '') %}{%else%}MySQL: {{ mysql.stdout }}{% endif %}"
      tool3: "mysql"

  - name: MongoDB
    shell: mongo --version|grep "version"|head -1|awk '{print $4}'
    register: mongo
    ignore_errors: yes

  - name: MongoDB check
    shell: "{% if (mongo.stdout == 'MongoDB') %} mongo --version|grep 'version'|head -1|awk '{print $7}' {% else %}  mongo --version|grep 'version'|head -1|awk '{print $4}' {% endif %}"
    register: mongo
    ignore_errors: yes

  - set_fact:
      mongo_out: "{% if (mongo.stdout == '') %}{%else%}Mongo: {{ mongo.stdout }}{% endif %}"
      tool4: "mongo"

  - name: Elasticsearch
    shell: rpm -qa | grep -i elasticsearch|cut -d '-' -f2
    register: elastic
    ignore_errors: yes

  - set_fact:
      elastic_out: "{% if (elastic.stdout == '') %}{%else%}Elasticsearch: {{ elastic.stdout }}{% endif %}"
      tool5: "elastic"

  - name: Kibana
    shell: rpm -qa | grep -i kibana|cut -d '-' -f2
    register: kibana
    ignore_errors: yes

  - set_fact:
      kibana_out: "{% if (kibana.stdout == '') %}{%else%}Kibana: {{ kibana.stdout }}{% endif %}"
      tool6: "kibana"

  - name: LDAP
    shell: rpm -qa | grep -i openldap|cut -d '-' -f2 | head -1
    register: ldap
    ignore_errors: yes

  - set_fact:
      ldap_out: "{% if (ldap.stdout == '') %}{%else%}OpenLDAP: {{ ldap.stdout }}{% endif %}"
      tool7: "ldap"

  - name: GlusterFS
    shell: gluster --version |head -1|awk '{print $2}'
    register: gluster
    ignore_errors: yes

  - set_fact:
      gluster_out: "{% if (gluster.stdout == '') %}{%else%}GlusterFS: {{ gluster.stdout }}{% endif %}"
      tool8: "glusterfs"

  - name: Percona Arbiter
    shell: rpm -qa | grep -i garbd|cut -d '-' -f6
    register: garb
    ignore_errors: yes

  - name: Percona check
    shell: "{% if (garb.stdout == '18.1.el7.x86_64') %} rpm -qa | grep -i garbd|cut -d '-' -f5 {% else %} rpm -qa | grep -i garbd|cut -d '-' -f6 {% endif %}"
    args:
      warn: false
    register: garb
    ignore_errors: yes  

  - set_fact:
      garb_out: "{% if (garb.stdout == '') %}{%else%}Garb: {{ garb.stdout }}{% endif %}"
      tool9: "garb"

  - name: Zabbix
    shell: rpm -qa | grep -i zabbix-agent|cut -d '-' -f3
    register: zabbix
    ignore_errors: yes

  - set_fact:
      zabbix_out: "{% if (zabbix.stdout == '') %}{%else%}Zabbix: {{ zabbix.stdout }}{% endif %}"
      tool10: "zabbix"

  - name: git
    shell: git --version|awk '{print $3}'
    register: git
    ignore_errors: yes

  - set_fact:
      git_out: "{% if (git.stdout == '') %}{%else%}Git: {{ git.stdout }}{% endif %}"
      tool11: "git"

  - name: PostgreSQL
    shell: psql -V|awk '{print $3}'
    register: psql
    ignore_errors: yes

  - set_fact:
      psql_out: "{% if (psql.stdout == '') %}{%else%}PostgreSQL: {{ psql.stdout }}{% endif %}"
      tool12: "psql"

  - name: filebeat
    shell: filebeat version|awk '{print $3}'
    register: filebeat
    ignore_errors: yes

  - set_fact:
      filebeat_out: "{% if (filebeat.stdout == '') %}{%else%}Filebeat: {{ filebeat.stdout }}{% endif %}"
      tool13: "filebeat"

  - name: wildfly
    shell: readlink -f /opt/wildfly|cut -d'-' -f2
    register: wildfly
    ignore_errors: yes

  - name: wildfly check
    shell: "{% if (wildfly.stdout == '/opt/wildfly') %} echo '' {%else%} readlink -f /opt/wildfly|cut -d'-' -f2 {% endif %}"
    register: wildfly
    ignore_errors: yes

  - set_fact:
      wildfly_out: "{% if (wildfly.stdout == '') %}{%else%}WildFLy: {{ wildfly.stdout }}{% endif %}"
      tool14: "wildfly"

  - name: ejbca
    shell: readlink -f /opt/ejbca|cut -f 3,4,5,6 -d '_' --output-delimiter='.'
    register: ejbca
    ignore_errors: yes

  - name: ejbca check
    shell: "{% if (ejbca.stdout == '/opt/ejbca') %} ls /opt |grep ejbca_ce_7|cut -f 3,4,5,6 -d'_' --output-delimiter='.'|head -1 {%else%} readlink -f /opt/ejbca|cut -f 3,4,5,6 -d '_' --output-delimiter='.' {% endif %}"
    register: ejbca
    ignore_errors: yes

  - set_fact:
      ejbca_out: "{% if (ejbca.stdout == '') %}{%else%}EJBCA: {{ ejbca.stdout }}{% endif %}"
      tool15: "ejbca"

  - name: apache
    shell: apachectl -v|cut -d'/' -f2|awk '{print $1}'|head -1
    register: apache
    ignore_errors: yes

  - set_fact:
      apache_out: "{% if (apache.stdout == '') %}{%else%}Apache HTTP Server: {{ apache.stdout }}{% endif %}"
      tool16: apache

  - name: EDB
    shell: /usr/edb/as14/bin/psql -V|awk '{print $3}'
    register: edb
    ignore_errors: yes

  - set_fact:
      edb_out: "{% if (edb.stdout == '') %}{%else%}EDB: {{ edb.stdout }}{% endif %}"
      tool17: "edb"

  - name: Drupal
    shell: docker exec -it docker_ikp_cms_1 /var/www/html/vendor/bin/drush status|head -n1|cut -d ' ' -f6
    register: drupal
    ignore_errors: yes

  - set_fact:
      drupal_out: "{% if (drupal.stdout == '') %}{%else%}Drupal: {{ drupal.stdout }}{% endif %}"
      tool18: "drupal"

  - name: WSO2 ESB
    shell: docker exec -ti docker_sus_1 /opt/wso2ei-6.5.0/bin/integrator.sh --version|head -1|cut -d'v' -f2
    register: wso2
    ignore_errors: yes

  - set_fact:
      wso2_out: "{% if (wso2.stdout == '') %}{%else%}WSO2 ESB: {{ wso2.stdout }}{% endif %}"
      tool19: "wso2"

  - name: Nessus
    shell: /opt/nessus/sbin/nessuscli --version|head -1|cut -d')' -f2|awk '{print $1}'
    register: nessus
    ignore_errors: yes

  - set_fact:
      nessus_out: "{% if (nessus.stdout == '') %}{%else%}Nessus: {{ nessus.stdout }}{% endif %}"
      tool20: "nessus"

  - name: stworzenie pliku dla 1 narzedzia
    copy:
      dest: /home/itsadm1/ansible/insight/results/TST_{{ item }}_ansible.csv
      content: "hostname;ip_mgm;os;version"
    delegate_to: localhost
    loop:
      - "{{ tool1 }}"
      - "{{ tool2 }}"
      - "{{ tool3 }}"
      - "{{ tool4 }}"
      - "{{ tool5 }}"
      - "{{ tool6 }}"
      - "{{ tool7 }}"
      - "{{ tool8 }}"
      - "{{ tool9 }}"
      - "{{ tool10 }}"
      - "{{ tool11 }}"
      - "{{ tool12 }}"
      - "{{ tool13 }}"
      - "{{ tool14 }}"
      - "{{ tool15 }}"
      - "{{ tool16 }}"
      - "{{ tool17 }}"
      - "{{ tool18 }}"
      - "{{ tool19 }}"
      - "{{ tool20 }}"

  - name: zrzut narzedzia do pliku
    lineinfile:
      dest: /home/itsadm1/ansible/insight/results/TST_{{ item.name }}_ansible.csv
      line: "{{ hostname }};{{ address }};{{ os }};{{ item.var }}"
      create: yes
      owner: itsadm1
      group: itsadm1
      insertafter: EOF
    loop:
      - { name: "{{ tool1 }}", var: "{{ trendmicro_out }}" }
      - { name: "{{ tool2 }}", var: "{{ docker_out }}" }
      - { name: "{{ tool3 }}", var: "{{ mysql_out }}" }
      - { name: "{{ tool4 }}", var: "{{ mongo_out }}" }
      - { name: "{{ tool5 }}", var: "{{ elastic_out }}" }
      - { name: "{{ tool6 }}", var: "{{ kibana_out }}" }
      - { name: "{{ tool7 }}", var: "{{ ldap_out }}" }
      - { name: "{{ tool8 }}", var: "{{ gluster_out }}" }
      - { name: "{{ tool9 }}", var: "{{ garb_out }}" }
      - { name: "{{ tool10 }}", var: "{{ zabbix_out }}" }
      - { name: "{{ tool11 }}", var: "{{ git_out }}" }
      - { name: "{{ tool12 }}", var: "{{ psql_out }}" }
      - { name: "{{ tool13 }}", var: "{{ filebeat_out }}" }
      - { name: "{{ tool14 }}", var: "{{ wildfly_out }}" }
      - { name: "{{ tool15 }}", var: "{{ ejbca_out }}" }
      - { name: "{{ tool16 }}", var: "{{ apache_out }}" }
      - { name: "{{ tool17 }}", var: "{{ edb_out }}" }
      - { name: "{{ tool18 }}", var: "{{ drupal_out }}" }
      - { name: "{{ tool19 }}", var: "{{ wso2_out }}" }
      - { name: "{{ tool20 }}", var: "{{ nessus_out }}" }
    delegate_to: localhost